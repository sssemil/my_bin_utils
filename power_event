#!/bin/bash

DOCK_DEVICE="17ef:a393"
BATTERY_THRESHOLD_PATH="/sys/class/power_supply/BAT0/charge_control_end_threshold"
OVERRIDE_PATH="/tmp/asus_bat_limit_override"
BATTERY_CAPACITY_PATH="/sys/class/power_supply/BAT0/capacity"

log() {
    echo "POWER MANAGER: $1" | tee /dev/kmsg
}

log "Power event: {$1}"

# Get the current battery capacity
current_capacity=$(cat "$BATTERY_CAPACITY_PATH")

# If override file exists and battery isn't full, log and exit
if [[ -e $OVERRIDE_PATH && $current_capacity -ne 100 ]]; then
    log "Override file found, and battery is not fully charged. Not changing the threshold."
    exit
fi
if [[ -e $OVERRIDE_PATH && $current_capacity -eq 100 ]]; then
    log "Override file found, and battery is fully charged. Removing the override file."
    rm -f $OVERRIDE_PATH
fi

# Check if external power supply is connected
is_power_connected=0
for power_supply_status in /sys/class/power_supply/*/online; do
    if [[ $(cat "$power_supply_status") -eq 1 ]]; then
        is_power_connected=1
        break
    fi
done

# Check if the USB dock is connected
is_dock_connected=$(lsusb | grep "$DOCK_DEVICE")

# Decide and set battery charging threshold
if [[ $is_power_connected -eq 1 && -n $is_dock_connected ]]; then
    log "External power supply is connected and dock is connected."
    echo 60 > $BATTERY_THRESHOLD_PATH
else
    echo 100 > $BATTERY_THRESHOLD_PATH
    if [[ $is_power_connected -ne 1 ]]; then
        log "No external power supply is connected."
    fi
    if [[ -z $is_dock_connected ]]; then
        log "Dock not connected."
    fi
fi

# Report the final battery threshold setting
current_threshold=$(cat "$BATTERY_THRESHOLD_PATH")
log "Battery threshold is set to: $current_threshold"

